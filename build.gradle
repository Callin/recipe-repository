buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.owasp:dependency-check-gradle:5.3.2.1'
    }
}

plugins {
    id 'org.springframework.boot' version '2.3.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

apply plugin: 'org.owasp.dependencycheck'

group = 'xyz.vegaone'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.liquibase:liquibase-core'
    implementation group: 'org.hibernate.validator', name: 'hibernate-validator-annotation-processor', version: '6.1.5.Final'
    implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '6.1.5.Final'
    implementation group: 'com.github.dozermapper', name: 'dozer-core', version: '6.5.0'

    // to mitigate CVE-2019-10086
    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.3.3'
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
    testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '5.3.3.RELEASE'

    runtimeOnly 'mysql:mysql-connector-java'

}
dependencyCheck {

    // let's ignore errors to make builds in Jenkins more stable
    failOnError = false

    // OWASP Dependency Check plugin for Jenkins needs an XML report,
    // but humans may also need an HTML one
    format = 'ALL'

    // set up a quality gate for vulnerabilities with high severity level:
    //   let's consider that a vulnerability has a high severity level if its CVSS score is higher than 7
    //   the build is going to fail if vulnerabilities with high severity level found
    failBuildOnCVSS = 7

    // specify a list of known issues which contain:
    //   false-positives
    //   confirmed vulnerabilities which are not fixed yet, but we have a ticket for that
    suppressionFile = 'dependency-check-known-issues.xml'
}

test {
    useJUnitPlatform()
}
